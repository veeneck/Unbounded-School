<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding on Cupper</title>
    <link>http://localhost:1313/cupper/patterns/coding/</link>
    <description>Recent content in Coding on Cupper</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/cupper/patterns/coding/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Code blocks</title>
      <link>http://localhost:1313/cupper/patterns/coding/code-blocks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cupper/patterns/coding/code-blocks/</guid>
      <description>&lt;p&gt;Markdown already supports code samples both inline (using single backticks like `some code here`) and in blocks. &lt;strong&gt;Cupper&lt;/strong&gt; will syntax highlight HTML, CSS, and JavaScript if you provide the correct language in the formulation of the block.&lt;/p&gt;&#xA;&lt;p&gt;So, this…&lt;/p&gt;&#xA;&lt;pre class=&#34;&#34;&gt;&lt;code  data-codeblock-shortcode&gt;&#xA;```html&#xA;&amp;lt;button aria-pressed=&#34;false&#34;&gt;toggle me&amp;lt;/button&gt;&#xA;```&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;… will result in this:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;aria-pressed&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;&amp;gt;toggle me&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;button&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that the syntax highlighting uses a greyscale theme. &lt;strong&gt;Cupper&lt;/strong&gt; is careful not to use color as part of its own design, because these colors may clash with those of the design being illustrated and discussed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Demo embedding</title>
      <link>http://localhost:1313/cupper/patterns/coding/demo-embedding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cupper/patterns/coding/demo-embedding/</guid>
      <description>&lt;p&gt;Sometimes just pictures of the pattern you&amp;rsquo;re documenting aren&amp;rsquo;t enough. Interactive patterns benefit from live demos, so that readers can test their functionality.&lt;/p&gt;&#xA;&lt;h2 id=&#34;codepen&#34;&gt;CodePen&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Cupper&lt;/strong&gt; offers a couple of ways to do this. The first is by embedding CodePen demos into the content. The &lt;code&gt;codePen&lt;/code&gt; shortcode takes just one argument: the codePen&amp;rsquo;s &lt;code&gt;ID&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;pre class=&#34;&#34;&gt;&lt;code  data-codeblock-shortcode&gt;&#xA;&amp;#x7b;{% codePen VpVNKW %}}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;This will embed the identified codePen into the content wherever you placed the shortcode, with the result view showing by default:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writing inline demos</title>
      <link>http://localhost:1313/cupper/patterns/coding/writing-inline-demos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cupper/patterns/coding/writing-inline-demos/</guid>
      <description>&lt;p&gt;There are some issues with &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;Demo embedding&lt;!-- raw HTML omitted --&gt;, like the embeds not working offline. They also come with their own branding, which will clash with the pattern you&amp;rsquo;re trying to illustrate.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Cupper&lt;/strong&gt; offers another option: a special &lt;code&gt;demo&lt;/code&gt; shortcode that allows you to write HTML, CSS, and JavaScript directly into the markdown file. The outputted demo is encapsulated using Shadow DOM, so you don&amp;rsquo;t have to worry about broken styles and global JS.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Color palettes</title>
      <link>http://localhost:1313/cupper/patterns/coding/color-palettes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cupper/patterns/coding/color-palettes/</guid>
      <description>&lt;p&gt;There&amp;rsquo;s no reason why your &lt;strong&gt;Cupper&lt;/strong&gt;-powered pattern library has to be all about functionality. You can include style guide-like information such as color palettes too. The &lt;code&gt;colors&lt;/code&gt; shortcode makes it easy to exhibit colors and their values together. Just supply a comma-separated list of CSS color values.&lt;/p&gt;&#xA;&lt;pre class=&#34;&#34;&gt;&lt;code  data-codeblock-shortcode&gt;&#xA;&amp;#x7b;{% colors &#34;#111111, #cccccc, #ffffff&#34; %}}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;The result is a one row strip showing each color supplied in order. The colors for &lt;strong&gt;Cupper&lt;/strong&gt; are greyscale:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Command line</title>
      <link>http://localhost:1313/cupper/patterns/coding/command-line/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cupper/patterns/coding/command-line/</guid>
      <description>&lt;p&gt;Your pattern documentation may need to include commands for installing packages or using &lt;!-- raw HTML omitted --&gt;CLI&lt;!-- raw HTML omitted --&gt;s. &lt;strong&gt;Cupper&lt;/strong&gt; offers the &lt;code&gt;cmd&lt;/code&gt; shortcode for making code blocks look like terminal commands.&lt;/p&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s how you write it:&lt;/p&gt;&#xA;&lt;pre class=&#34;&#34;&gt;&lt;code  data-codeblock-shortcode&gt;&#xA;&amp;#x7b;{&amp;lt;cmd&gt;}}&#xA;npm run start&#xA;&amp;#x7b;{&amp;lt;/cmd&gt;}}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;And here&amp;rsquo;s how it looks:&lt;/p&gt;&#xA;&lt;pre class=&#34;cmd&#34;&gt;&lt;code&gt;npm run start&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;The &lt;code&gt;cmd&lt;/code&gt; shortcode currently only supports single commands. If you want to show multiple, successive commands use separate &lt;code&gt;cmd&lt;/code&gt; blocks.&lt;/p&gt;</description>
    </item>
    <item>
      <title>File trees</title>
      <link>http://localhost:1313/cupper/patterns/coding/file-trees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cupper/patterns/coding/file-trees/</guid>
      <description>&lt;p&gt;Representing folder/file structures is simple and accessible in &lt;strong&gt;Cupper&lt;/strong&gt;. Which is just as well, because some components may need to conform to a certain folder structure.&lt;/p&gt;&#xA;&lt;p&gt;The file tree is described using a markdown nested list structure:&lt;/p&gt;&#xA;&lt;pre class=&#34;&#34;&gt;&lt;code  data-codeblock-shortcode&gt;&#xA;&amp;#x7b;{% fileTree %}}&#xA;* Level 1 folder&#xA;    * Level 2 file&#xA;    * Level 2 folder&#xA;        * Level 3 file&#xA;        * Level 3 folder&#xA;            * Level 4 file&#xA;        * Level 3 folder&#xA;            * Level 4 file&#xA;            * Level 4 file&#xA;        * Level 3 file&#xA;    * Level 2 folder&#xA;        * Level 3 file&#xA;        * Level 3 file&#xA;        * Level 3 file&#xA;    * Level 2 file&#xA;* Level 1 file&#xA;&amp;#x7b;{% /fileTree %}}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;This is drawn in the following fashion, but preserves the underlying nested list structure for assistive technologies such as screen readers:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tested using...</title>
      <link>http://localhost:1313/cupper/patterns/coding/tested/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cupper/patterns/coding/tested/</guid>
      <description>&lt;p&gt;When you&amp;rsquo;re an inclusive designer, it&amp;rsquo;s pertinent to do some testing. Following specs is one thing, but you need to verify that your component works okay for users.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Cupper&lt;/strong&gt; provided a &lt;code&gt;tested&lt;/code&gt; shortcode that lets you show which browsers and assistive technologies you&amp;rsquo;ve tried your design out in. Here&amp;rsquo;s an example. Note the commas and &amp;ldquo;+&amp;rdquo; signs.&lt;/p&gt;&#xA;&lt;pre class=&#34;&#34;&gt;&lt;code  data-codeblock-shortcode&gt;&#xA;&amp;#x7b;{% tested using=&#34;Firefox + JAWS, Chrome, Safari iOS + Voiceover, Edge&#34; %}}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;This outputs:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
