<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Writing on Cupper</title>
    <link>http://localhost:1313/cupper/patterns/writing/</link>
    <description>Recent content in Writing on Cupper</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/cupper/patterns/writing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Project structure</title>
      <link>http://localhost:1313/cupper/patterns/writing/project-structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cupper/patterns/writing/project-structure/</guid>
      <description>&lt;p&gt;Before you can set about making documentation, you need to know where everything goes. The simplest folder structure looks like this:&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;content&#xA;&lt;ul&gt;&#xA;&lt;li&gt;_index.md&lt;/li&gt;&#xA;&lt;li&gt;print-version.md&lt;/li&gt;&#xA;&lt;li&gt;patterns&#xA;&lt;ul&gt;&#xA;&lt;li&gt;name-of-my-pattern.md&lt;/li&gt;&#xA;&lt;li&gt;name-of-my-other-pattern.md&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;/content&lt;/strong&gt; - This is where all of your content lives. You won&amp;rsquo;t need to visit any other folders very frequently.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;_index.md&lt;/strong&gt; — This is the content file for your home page.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;print-version.md&lt;/strong&gt; — This is a placeholder for the single-page / print-friendly version of you library. Leave this file as it is.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;/patterns&lt;/strong&gt; — This is the folder where individual content files are kept. &lt;strong&gt;Cupper&lt;/strong&gt; refers to each individual documentation file/page as a &amp;ldquo;pattern&amp;rdquo;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;subsections&#34;&gt;Subsections&lt;/h2&gt;&#xA;&lt;p&gt;You may have noticed that this site&amp;rsquo;s navigation is divided partly into subsections, with labels like &amp;ldquo;Writing&amp;rdquo;. &lt;strong&gt;Cupper&lt;/strong&gt; (or, rather, Hugo) allows you to create such subsections by simply nesting folders under the &lt;code&gt;/patterns&lt;/code&gt; folder. In the following example, I have a subsection about different types of &amp;ldquo;popup&amp;rdquo; pattern.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Markdown &amp; metadata</title>
      <link>http://localhost:1313/cupper/patterns/writing/markdown-and-metadata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cupper/patterns/writing/markdown-and-metadata/</guid>
      <description>&lt;p&gt;In &lt;strong&gt;Cupper&lt;/strong&gt; everything is documented using markdown, as a &amp;ldquo;pattern&amp;rdquo;. To create a new pattern file, just add a file with the &lt;code&gt;.md&lt;/code&gt; extension to the &lt;code&gt;content/patterns&lt;/code&gt; folder. It&amp;rsquo;s recommended you use &amp;ldquo;kebab case&amp;rdquo; to name the file (words separated by hyphens). For example, a pattern with the title &amp;ldquo;Menu button&amp;rdquo; should probably have the filename &lt;code&gt;menu-button&lt;/code&gt;. Then you get a nice clean URL: &lt;code&gt;username.github.io/your-library/patterns/menu-button&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;If you&amp;rsquo;re not familiar with writing markdown, there are a number of tutorials available. One of the best is &lt;a href=&#34;https://guides.github.com/features/mastering-markdown/&#34;&gt;Mastering Markdown&lt;/a&gt; offered by Github. There&amp;rsquo;s also a &lt;a href=&#34;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&#34;&gt;nice cheatsheet here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Expandable sections</title>
      <link>http://localhost:1313/cupper/patterns/writing/expandable-sections/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cupper/patterns/writing/expandable-sections/</guid>
      <description>&lt;p&gt;In some cases, where there is a lot of content, it&amp;rsquo;s helpful to collapse certain sections. That way, readers get an overview of what&amp;rsquo;s in the content and can choose where to focus in. &lt;strong&gt;Cupper&lt;/strong&gt; provides a shortcode method for creating expandable sections which generates accessible markup using &lt;code&gt;aria-expanded&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;code&gt;expandable&lt;/code&gt; shortcode takes three parameters:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;label&lt;/strong&gt; — This is the label for the the section heading.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;level&lt;/strong&gt; — This is the heading level (e.g. &lt;code&gt;level=&amp;quot;2&amp;quot;&lt;/code&gt; for an &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;) that will contain the label. If you omit a level parameter, no heading is used; it&amp;rsquo;s just a button.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;open&lt;/strong&gt; — Include this and give it a value of &amp;ldquo;true&amp;rdquo; or &amp;ldquo;yes&amp;rdquo; to make the section expanded on page load.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s what the code might look like for a simple expandable section containing markdown:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Notes &amp; warnings</title>
      <link>http://localhost:1313/cupper/patterns/writing/notes-and-warnings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cupper/patterns/writing/notes-and-warnings/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Cupper&lt;/strong&gt; acknowledges that simple markdown is limiting when it comes to writing compelling documentation, so it provides a number of &amp;ldquo;shortcodes&amp;rdquo;. Shortcodes offer a simple syntax for including rich content. For example, &lt;strong&gt;Cupper&lt;/strong&gt; provides shortcodes for including notes and warnings.&lt;/p&gt;&#xA;&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;&#xA;&lt;p&gt;You may wish to pick out some content in your pattern&amp;rsquo;s documentation as a note — an aside to the main thrust of the pattern&amp;rsquo;s description. This is possible using the following syntax:&lt;/p&gt;</description>
    </item>
    <item>
      <title>References</title>
      <link>http://localhost:1313/cupper/patterns/writing/references/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cupper/patterns/writing/references/</guid>
      <description>&lt;h2 id=&#34;cross-references&#34;&gt;Cross-references&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Cupper&lt;/strong&gt; identifies the main content files in your documentation as &lt;em&gt;patterns&lt;/em&gt;, and they&amp;rsquo;re kept in the &lt;strong&gt;content/ patterns&lt;/strong&gt; folder. It&amp;rsquo;s easy to cross-reference patterns using the &lt;code&gt;pattern&lt;/code&gt; shortcode. For example, I can reference the &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;Notes &amp;amp; warnings&lt;!-- raw HTML omitted --&gt; pattern. Here&amp;rsquo;s what the markdown looks like, including the shortcode:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Snippets</title>
      <link>http://localhost:1313/cupper/patterns/writing/snippets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cupper/patterns/writing/snippets/</guid>
      <description>&lt;p&gt;A lot of the time, your larger documentation patterns will share some common techniques and utilities. For this reason, &lt;strong&gt;Cupper&lt;/strong&gt; lets you save snippets of markdown in a &lt;strong&gt;snippets&lt;/strong&gt; folder, alongside the main content folder.&lt;/p&gt;&#xA;&lt;p&gt;The example &lt;code&gt;visually-hidden.md&lt;/code&gt; snippet describes the CSS needed to create content that is visually hidden but still available to screen readers. Since this is a technique/utility you are likely to use often, it&amp;rsquo;s nice to be able to just drop a snippet into your markdown content. The &lt;code&gt;snippet&lt;/code&gt; shortcode lets you do exactly that:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tables of contents</title>
      <link>http://localhost:1313/cupper/patterns/writing/tables-of-contents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/cupper/patterns/writing/tables-of-contents/</guid>
      <description>&lt;p&gt;Pattern pages in &lt;strong&gt;Cupper&lt;/strong&gt; that have two or more subheadings (&lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;s) automatically get a &lt;strong&gt;table of contents&lt;/strong&gt;: a list of links to the main subsections for the page. This feature is made accessible as a navigation region with the &amp;ldquo;Table of contents&amp;rdquo; label and uses an ordered list. The table of contents markup for the &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;Setup&lt;!-- raw HTML omitted --&gt; page looks something like this:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
